- name: Check if containerd services exist
  win_service:
    name: containerd
  register: containerd_service

- name: Install containerd
  become: yes
  become_method: runas
  become_user: SYSTEM
  win_shell: |
    Import-Module ./Helper.psm1
    if (!(Test-Path Install-Containerd.ps1)) {
      curl.exe -LO https://github.com/kubernetes-sigs/sig-windows-tools/raw/master/kubeadm/scripts/Install-Containerd.ps1
      Replace-ContentOfFile -Path ./Install-Containerd.ps1 "tar.exe" "C:/Windows/System32/tar.exe"
    }
    ./Install-Containerd.ps1
    rm C:/etc/cni/net.d/0-containerd-nat.json -ErrorAction SilentlyContinue
    cd 'C:/Program Files/containerd' 
    curl.exe -LO https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.20.0/crictl-v1.20.0-windows-amd64.tar.gz
    tar xvf ./crictl-v1.20.0-windows-amd64.tar.gz
  args:
    chdir: "c:\\antrea-ansible"
  when: not containerd_service.exists


- name: Preload essential images
  win_shell: |
    crictl.exe  --runtime-endpoint "npipe:////./pipe/containerd-containerd" pull k8sprow.azurecr.io/kubernetes-e2e-test-images/busybox:1.29
    crictl.exe  --runtime-endpoint "npipe:////./pipe/containerd-containerd" pull k8sprow.azurecr.io/kubernetes-e2e-test-images/busybox:1.29
    crictl.exe  --runtime-endpoint "npipe:////./pipe/containerd-containerd" pull k8sprow.azurecr.io/kubernetes-e2e-test-images/nonroot:1.0
    crictl.exe  --runtime-endpoint "npipe:////./pipe/containerd-containerd" pull k8sprow.azurecr.io/kubernetes-e2e-test-images/pause:3.2
    crictl.exe  --runtime-endpoint "npipe:////./pipe/containerd-containerd" pull k8sprow.azurecr.io/kubernetes-e2e-test-images/agnhost:2.13
    crictl.exe  --runtime-endpoint "npipe:////./pipe/containerd-containerd" pull --creds "{{docker_credential}}" caorui/hello-antrea:latest
  when: containerd_service.exists
